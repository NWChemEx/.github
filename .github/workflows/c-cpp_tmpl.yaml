name: C_C++_CI

on:
  workflow_call:
    inputs:
      cached-libs:
        required: false
        type: string
      dependencies:
        required: true
        type: string
      clang-build:
        required: true
        type: boolean
      gcc-build:
        required: true
        type: boolean
      ninja_build:
        required: true
        type: boolean
    secrets:
      CMAIZE_GITHUB_TOKEN:
        required: true

jobs:
  Build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cmake_version: [3.16.3]
        gcc_version: [9]
        clang_version: [11]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
        with:
          python-version: '3.x'
      - name: Get dependencies
        env:
          cmake_version: ${{ matrix.cmake_version }}
          gcc_version: ${{ matrix.gcc_version }}
          clang_version: ${{ matrix.clang_version }}
        uses: NWChemEx-Project/.github/actions/get_dependencies@test-cache
        with:
          dependencies: ${{inputs.dependencies}}
          cached-libs: ${{inputs.cached-libs}}
      - name: Build using Clang
        if: ${{inputs.clang-build == true}}
        env:
          cmake_version: ${{ matrix.cmake_version }}
          clang_version: ${{ matrix.clang_version }}
          ninja_build: ${{ inputs.ninja_build }}
        uses: NWChemEx-Project/.github/actions/build@test-cache
        with: 
          CMAIZE_GITHUB_TOKEN: ${{ secrets.CMAIZE_GITHUB_TOKEN }}
      - name: Build using GCC
        if: ${{inputs.gcc-build == true}}
        env:
          cmake_version: ${{ matrix.cmake_version }}
          gcc_version: ${{ matrix.gcc_version }}
          ninja_build: ${{ inputs.ninja_build }}
        uses: NWChemEx-Project/.github/actions/build@test-cache
        with: 
          CMAIZE_GITHUB_TOKEN: ${{ secrets.CMAIZE_GITHUB_TOKEN }}
      # - name: Test Application
      #   uses: NWChemEx-Project/.github/actions/test@test-cache
      #   with: 
      #     CMAIZE_GITHUB_TOKEN: ${{ secrets.CMAIZE_GITHUB_TOKEN }}
      # - uses: codecov/codecov-action@v1
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     file: ./coverage.xml
