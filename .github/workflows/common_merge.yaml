# Copyright 2023 NWChemEx-Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Common Merge Workflow
# Collects common Merge related jobs for the NWX stack, specifically
# 1. Bumping version tags
# 2. Deploying updated documentation

on:
  workflow_call:
    inputs:
      doc_target:
        description: "The name of the documentation target. Set to 'Sphinx' to skip doxygen"
        type: string
        required: false
        default: 'Sphinx'
      generate_module_docs:
        description: "Whether or not to generate PluginPlay Module documentation"
        type: boolean
        default: false
    secrets:
      CMAIZE_GITHUB_TOKEN:
        description: "Token passed to CMaize"
        required: false
      TAG_TOKEN:
        description: "Token used to bump the version tag"
        required: true
      CONTAINER_REPO_TOKEN:
        description: "Token to access Github Image Registry"
        required: true

jobs:
  # Bump the version tag
  bump_tag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: haya14busa/action-bumpr@v1
        with:
          default_bump_level: patch
          github_token: ${{ secrets.TAG_TOKEN }}
          tag_as_user: .github[bot]
          tag_as_email: .github[bot]@github.com

  # Deploy updated documentation
  deploy_docs:
    runs-on: ubuntu-latest
    container: 
      image: ghcr.io/nwchemex-project/nwx_buildenv:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.CONTAINER_REPO_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      # These next two steps will configure CMake if required
      - name: Build Only Docs
        if: |
          inputs.generate_module_docs == 'false' && inputs.doc_target != 'Sphinx'
        run: |
          cmake -Bbuild -H. -GNinja -DBUILD_DOCS=ON -DONLY_BUILD_DOCS=ON
        shell: bash
      - name: Build Library
        if: inputs.generate_module_docs == true
        env:
          CMAIZE_GITHUB_TOKEN: ${{secrets.CMAIZE_GITHUB_TOKEN}}
        run: |
          toolchain=/toolchains/nwx_gcc-11.cmake
          echo 'set(CMAIZE_GITHUB_TOKEN '${CMAIZE_GITHUB_TOKEN}')' >> toolchain

          cmake -Bbuild -H. -GNinja -DBUILD_DOCS=ON \
          -DCMAKE_INSTALL_PREFIX=./install \
          -DCMAKE_TOOLCHAIN_FILE="${toolchain}"
      # Build the Doxygen docs
      - name: Build Doxygen Docs
        if: ${{ inputs.doc_target != 'Sphinx' }}
        run: |
          cmake --build build --target ${{ inputs.doc_target }} --parallel

          # Migrate the Doxygen documentation to the docs source
          mkdir docs/build
          mkdir docs/build/html
          mv build/html "docs/build/html/${{ inputs.doc_target }}"
        shell: bash
      # Build the C++ Library if building module docs
      - name: Build Library
        if: inputs.generate_module_docs == 'true'
        run: cmake --build build --parallel
        shell: bash
      # Generate the module docs source files
      - name: Generate Module Docs
        if: inputs.generate_module_docs == 'true'
        uses: NWChemEx-Project/.github/actions/generate_module_docs@master
        with:
          doc_target: $${{ inputs.doc_target }}
      # Build the Sphinx docs and then deploy
      - name: Sphinx Docs
        run: |
          cd docs
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
          make html
        shell: bash
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          publish_dir: ./docs/build/html  
